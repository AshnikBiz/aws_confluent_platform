# Name: z_database_connect.txt
# Owner: Saurav Mitra
# Description: Commands to connect & interact to multiple Databases.

# Set Password as used in terraform.tfvars
db_password='Password'

##########################################
# Connect to Oracle 19EE Source
sqlplus "sys/${db_password}@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.0.1.100)(PORT=1521))(CONNECT_DATA=(SID=ORCLCDB)))" as sysdba
# SELECT LOG_MODE FROM V$DATABASE;
# SELECT SUPPLEMENTAL_LOG_DATA_MIN, SUPPLEMENTAL_LOG_DATA_PK FROM V$DATABASE;
# ARCHIVE LOG LIST;

ALTER SESSION SET CONTAINER=ORCLPDB1;

SET LINESIZE 4000
SELECT COUNT(1) FROM ORCL_USER.CONSULTANTS;
SELECT ID, FIRST_NAME, LAST_NAME, EMAIL, RATE, UPDATED_AT FROM ORCL_USER.CONSULTANTS;

INSERT INTO ORCL_USER.CONSULTANTS (FIRST_NAME, LAST_NAME, EMAIL, RATE, STATUS) VALUES ('Saurav', 'Mitra', 'saurav.mitra@ashnik.com', 5000.00, 'perm');
COMMIT;
UPDATE ORCL_USER.CONSULTANTS SET RATE=6100.25 WHERE EMAIL='saurav.mitra@ashnik.com';
COMMIT;
INSERT INTO ORCL_USER.CONSULTANTS (FIRST_NAME, LAST_NAME, EMAIL, RATE, STATUS) VALUES ('Tim', 'Smith', 'tim.smith@freelance.com', 3500.70, 'contract');
COMMIT;
DELETE FROM ORCL_USER.CONSULTANTS WHERE EMAIL='tim.smith@freelance.com';
COMMIT;
INSERT INTO ORCL_USER.CONSULTANTS (FIRST_NAME, LAST_NAME, EMAIL, RATE, STATUS) VALUES ('Shane', 'Wilson', 'shane.wilson@freelance.com', 5000.00, 'perm');
COMMIT;
INSERT INTO ORCL_USER.CONSULTANTS (FIRST_NAME, LAST_NAME, EMAIL, RATE, STATUS) VALUES ('John', 'Sinha', 'john.sinha@freelance.com', 9000.00, 'contract');
COMMIT;

SELECT COUNT(1) FROM ORCL_USER.EMPLOYEES;
set long 100000
set head off
set echo off
set pagesize 0
set verify off
set feedback off
SELECT DBMS_METADATA.GET_DDL('TABLE','EMPLOYEES','ORCL_USER') FROM DUAL;

exit


# Connect to Oracle 19EE Target
sqlplus "sys/${db_password}@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.0.1.100)(PORT=1525))(CONNECT_DATA=(SID=ORCLCDB)))" as sysdba

ALTER SESSION SET CONTAINER=ORCLPDB1;

SET LINESIZE 4000
SELECT DISTINCT OBJECT_NAME FROM DBA_OBJECTS WHERE OBJECT_TYPE = 'TABLE' AND OWNER = 'ORCL_USER';
SELECT COUNT(1) FROM ORCL_USER.EMPLOYEES;
SELECT * FROM ORCL_USER.EMPLOYEES;

SELECT COUNT(1) FROM ORCL_USER.EMPLOYEES1;
SELECT * FROM ORCL_USER.EMPLOYEES1;

SELECT COUNT(1) FROM ORCL_USER.CONSULTANTS;
SELECT ID, FIRST_NAME, LAST_NAME, EMAIL, RATE, UPDATED_AT FROM ORCL_USER.CONSULTANTS;

SELECT COUNT(1) FROM ORCL_USER.CONSULTANTS1;
SELECT ID, FIRST_NAME, LAST_NAME, EMAIL, RATE, UPDATED_AT FROM ORCL_USER.CONSULTANTS1;

exit
##########################################


##########################################
# Connect to Mysql
mysql -u root -h 127.0.0.1 -p${db_password}
SELECT table_schema, table_name FROM INFORMATION_SCHEMA.tables WHERE TABLE_SCHEMA NOT IN ('mysql', 'information_schema', 'performance_schema', 'sys');
use sales;
select count(1) from product;
desc product;
exit
##########################################


##########################################
# Connect to Postgres Source
source ~/.bash_profile
psql -U postgres -h 127.0.0.1 -p 5432
\l
\d
\dn
\c postgres
\d "EMPLOYEES"
\d+ "EMPLOYEES"
SELECT column_name, data_type, character_maximum_length, is_nullable FROM information_schema.columns WHERE table_name = 'EMPLOYEES' order by ordinal_position;
SELECT * FROM "EMPLOYEES";

select count(1) from consultants;
select * from consultants;
SELECT column_name, data_type, character_maximum_length, is_nullable FROM information_schema.columns WHERE table_name = 'consultants' order by ordinal_position;

insert into consultants (first_name, last_name, email, rate, status) values ('Saurav', 'Mitra', 'saurav.mitra@ashnik.com', 5000.00, 'perm');
update consultants set rate=6100.25 where email='saurav.mitra@ashnik.com';
insert into consultants (first_name, last_name, email, rate, status) values ('Tim', 'Smith', 'tim.smith@freelance.com', 3500.70, 'contract');
delete from consultants where email='tim.smith@freelance.com';
insert into consultants (first_name, last_name, email, rate, status) values ('Shane', 'Wilson', 'shane.wilson@freelance.com', 5000.00, 'perm');
insert into consultants (first_name, last_name, email, rate, status) values ('John', 'Sinha', 'john.sinha@freelance.com', 9000.00, 'contract');

\q

# Connect to Postgres Target
source ~/.bash_profile
psql -U postgres -h 127.0.0.1 -p 5433
select count(1) from consultants;
select * from consultants;
\q
##########################################


##########################################
# Connect to Elasticsearch
curl -XGET -u elastic:${db_password} http://127.0.0.1:9200/_cat/health
curl -XGET -u elastic:${db_password} http://127.0.0.1:9200/_cat/indices
curl -XGET -u elastic:${db_password} http://127.0.0.1:9200/product?pretty=true
curl -XGET -u elastic:${db_password} http://127.0.0.1:9200/product/_search?pretty=true
curl -XDELETE -u elastic:${db_password} http://127.0.0.1:9200/product?pretty=true

GET _cat/indices
GET consultants/_search
##########################################


##########################################
# Connect to MongoDB
mongo 127.0.0.1:27017/admin -u root -p ${db_password}
show dbs
use sales
show collections
db.products.find()
db.products.count()
# db.products.drop()
exit
##########################################


##########################################
# Connect to Redis
# redis-cli -h 127.0.0.1 -p 6379 -a ${db_password} -n 1
redis-cli -h 127.0.0.1 -p 6379 -a ${db_password}
select 1
keys *
get "1"
get "10"
exit
##########################################


##########################################
# Connect to MSSQL
mssql-cli -S localhost -U sa -P ${db_password} -d AdventureWorks -Q "\lt"
mssql-cli -S localhost -U sa -P ${db_password} -d AdventureWorks -Q "select count(1) from SalesLT.Customer"

mssql-cli -S localhost -U sa -P ${db_password} -d AdventureWorks 
select * from SalesLT.Customer;

exit
##########################################


##########################################
# Connect to RabbitMQ
http://10.0.1.100:15672
with username rabbitmq & password ${db_password}
##########################################


##########################################
# Docker Commands
docker images
docker container ls -a
docker container stop mongodb_mongo_1
docker rm -f mongodb_mongo_1 
docker image rm mongo
docker exec -it mssql bash
docker exec -it mssql /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${db_password}
##########################################
